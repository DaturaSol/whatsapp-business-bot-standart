import json
from logging import getLogger
from aiohttp import ClientSession
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy.orm.attributes import flag_modified

from app.data_base.db_helper.crud import get_user
from app.scripiter import ScriptBlueprint, ScriptBaseModel
from app.client_session.services.genai import get_ai_response

# --- WebHook ---
from app.routes.webhook.models.contacts import Contact
from app.routes.webhook.models.messages.list import ListMessageMessage
from app.routes.webhook.models.messages.nfm_reply import NfmReplyMessage
from app.routes.webhook.models.messages.button import ButtonMessageMessage
from app.routes.webhook.models.messages.text import TextMessage as TextMessageWeb

# -- Client Session ---
from app.client_session.messages.models.text import TextMessage
from app.client_session.messages.models.template import TemplateMessage
from app.client_session.messages.models.interactive_list import InteractiveListMessage
from app.client_session.messages.models.button import InteractiveButtonMessage


log = getLogger(__name__)

unasus_bp = ScriptBlueprint()


@unasus_bp.register()
class UnaSusMenu(ScriptBaseModel):
    """Menu for UnaSUS content also refered as PNSPIPN,
    here users can choose between chapeters and exercises on this 
    content."""
    async def _fn(self):
        contatcs = self.value.contacts
        if not contatcs:
            return
        contatc = contatcs[0]
        wa_id = contatc.wa_id

        header = "M√≥dulo"
        body = (
            "Pol√≠tica Nacional de Sa√∫de Integral da Popula√ß√£o (PNSIPN) üìñ\n\n"
            
            "Ol√°! Bem-vindo(a) ao m√≥dulo sobre a Pol√≠tica Nacional de Sa√∫de " 
            "Integral da Popula√ß√£o (PNSIPN). üåü\n\n" 
            
            "Aqui, vamos explorar o conte√∫do detalhado referente a esta importante "
            "pol√≠tica, cuidadosamente elaborado pelo Professor Hilton P. Silva.\n\n"
            
            "Neste espa√ßo, voc√™ poder√° escolher como deseja interagir com o material:\n"
            
            "1. *Explorar os Cap√≠tulos* üìö:\n"
            "Navegue pelo conte√∫do de forma progressiva, lendo cada se√ß√£o para um aprendizado completo e sequencial.\n\n"
            
            "2. *Praticar com Exerc√≠cios* ‚úçÔ∏è:\n"
            "Teste seus conhecimentos respondendo a perguntas sobre os temas abordados. " 
            "Voc√™ pode fazer os exerc√≠cios conforme avan√ßa nos cap√≠tulos ou quando se sentir pronto(a) para revisar.\n\n"
            
            "O que voc√™ gostaria de fazer primeiro? Acessar os Cap√≠tulos ou ir para os Exerc√≠cios? üòä"
        )
        options = {
            "title": "Menu",
            "rows": [
                {"title": "Cap√≠tulos", "id": UnaSusChapterMenu.__name__},
                {"title": "Exerc√≠cios", "id": IntroMenuExercises.__name__},
            ],
        }

        message = InteractiveListMessage(to=wa_id, button_name="Op√ß√µes", body_text=body)
        message.add_header(header)
        message.add_section(options)

        await message.send(self.client_session)

        self.next = "Redirecter"
        user = await get_user(self.db_session, wa_id)
        if not user:
            return
        user.current_step = self.next
        await self.db_session.commit()
        
# --- Chapters --- 
@unasus_bp.register()
class UnaSusChapterMenu(ScriptBaseModel):
    """Menu conteining all chapters for UnaSus content on 
    Pol√≠tica Nacional de Sa√∫de Integral da Popula√ß√£o"""
    async def _fn(self):
        contatcs = self.value.contacts
        if not contatcs:
            return
        contatc = contatcs[0]
        wa_id = contatc.wa_id

        header = "M√≥dulo"
        body = (
            "Pol√≠tica Nacional de Sa√∫de Integral da Popula√ß√£o (PNSIPN) üìñ\n\n"
            
            "Ol√°! Bem-vindo(a) ao m√≥dulo sobre a Pol√≠tica Nacional de Sa√∫de " 
            "Integral da Popula√ß√£o (PNSIPN). üåü\n\n" 
            
            "Aqui, vamos explorar o conte√∫do detalhado referente a esta importante "
            "pol√≠tica, cuidadosamente elaborado pelo Professor Hilton P. Silva.\n\n"
            
            "Neste espa√ßo, voc√™ poder√° escolher como deseja interagir com o material:\n"
            
            "1. *Explorar os Cap√≠tulos* üìö:\n"
            "Navegue pelo conte√∫do de forma progressiva, lendo cada se√ß√£o para um aprendizado completo e sequencial.\n\n"
            
            "2. *Praticar com Exerc√≠cios* ‚úçÔ∏è:\n"
            "Teste seus conhecimentos respondendo a perguntas sobre os temas abordados. " 
            "Voc√™ pode fazer os exerc√≠cios conforme avan√ßa nos cap√≠tulos ou quando se sentir pronto(a) para revisar.\n\n"
            
            "O que voc√™ gostaria de fazer primeiro? Acessar os Cap√≠tulos ou ir para os Exerc√≠cios? üòä"
        )
        options = {
            "title": "Menu",
            "rows": [
                {"title": "Cap√≠tulos", "id": IntroMenuChapters.__name__},
                {"title": "Exerc√≠cios", "id": IntroMenuExercises.__name__},
            ],
        }

        message = InteractiveListMessage(to=wa_id, button_name="Op√ß√µes", body_text=body)
        message.add_header(header)
        message.add_section(options)

        await message.send(self.client_session)

        self.next = "Redirecter"
        user = await get_user(self.db_session, wa_id)
        if not user:
            return
        user.current_step = self.next
        await self.db_session.commit()